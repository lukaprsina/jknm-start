/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from "@tanstack/react-router";
import { createServerRootRoute } from "@tanstack/react-start/server";

import { Route as rootRouteImport } from "./routes/__root";
import { Route as ShellRouteImport } from "./routes/shell";
import { Route as LoginRouteRouteImport } from "./routes/login/route";
import { Route as HomepageRouteRouteImport } from "./routes/homepage/route";
import { Route as Home2RouteRouteImport } from "./routes/home2/route";
import { Route as DashboardRouteRouteImport } from "./routes/dashboard/route";
import { Route as IndexRouteImport } from "./routes/index";
import { Route as LoginIndexRouteImport } from "./routes/login/index";
import { Route as DashboardIndexRouteImport } from "./routes/dashboard/index";
import { Route as staticZgodovinaRouteImport } from "./routes/(static)/zgodovina";
import { Route as NovicaNovica_idRouteRouteImport } from "./routes/novica/$novica_id/route";
import { Route as NovicaNovica_idUrediRouteImport } from "./routes/novica/$novica_id/uredi";
import { ServerRoute as ApiUploadServerRouteImport } from "./routes/api/upload";
import { ServerRoute as ApiAuthSplatServerRouteImport } from "./routes/api/auth/$";

const EditorIndexLazyRouteImport = createFileRoute("/editor/")();
const rootServerRouteImport = createServerRootRoute();

const ShellRoute = ShellRouteImport.update({
  id: "/shell",
  path: "/shell",
  getParentRoute: () => rootRouteImport,
} as any);
const LoginRouteRoute = LoginRouteRouteImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => rootRouteImport,
} as any);
const HomepageRouteRoute = HomepageRouteRouteImport.update({
  id: "/homepage",
  path: "/homepage",
  getParentRoute: () => rootRouteImport,
} as any);
const Home2RouteRoute = Home2RouteRouteImport.update({
  id: "/home2",
  path: "/home2",
  getParentRoute: () => rootRouteImport,
} as any);
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: "/dashboard",
  path: "/dashboard",
  getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any);
const EditorIndexLazyRoute = EditorIndexLazyRouteImport.update({
  id: "/editor/",
  path: "/editor/",
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import("./routes/editor/index.lazy").then((d) => d.Route));
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => LoginRouteRoute,
} as any);
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => DashboardRouteRoute,
} as any);
const staticZgodovinaRoute = staticZgodovinaRouteImport.update({
  id: "/(static)/zgodovina",
  path: "/zgodovina",
  getParentRoute: () => rootRouteImport,
} as any);
const NovicaNovica_idRouteRoute = NovicaNovica_idRouteRouteImport.update({
  id: "/novica/$novica_id",
  path: "/novica/$novica_id",
  getParentRoute: () => rootRouteImport,
} as any);
const NovicaNovica_idUrediRoute = NovicaNovica_idUrediRouteImport.update({
  id: "/uredi",
  path: "/uredi",
  getParentRoute: () => NovicaNovica_idRouteRoute,
} as any);
const ApiUploadServerRoute = ApiUploadServerRouteImport.update({
  id: "/api/upload",
  path: "/api/upload",
  getParentRoute: () => rootServerRouteImport,
} as any);
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: "/api/auth/$",
  path: "/api/auth/$",
  getParentRoute: () => rootServerRouteImport,
} as any);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/dashboard": typeof DashboardRouteRouteWithChildren;
  "/home2": typeof Home2RouteRoute;
  "/homepage": typeof HomepageRouteRoute;
  "/login": typeof LoginRouteRouteWithChildren;
  "/shell": typeof ShellRoute;
  "/novica/$novica_id": typeof NovicaNovica_idRouteRouteWithChildren;
  "/zgodovina": typeof staticZgodovinaRoute;
  "/dashboard/": typeof DashboardIndexRoute;
  "/login/": typeof LoginIndexRoute;
  "/editor": typeof EditorIndexLazyRoute;
  "/novica/$novica_id/uredi": typeof NovicaNovica_idUrediRoute;
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/home2": typeof Home2RouteRoute;
  "/homepage": typeof HomepageRouteRoute;
  "/shell": typeof ShellRoute;
  "/novica/$novica_id": typeof NovicaNovica_idRouteRouteWithChildren;
  "/zgodovina": typeof staticZgodovinaRoute;
  "/dashboard": typeof DashboardIndexRoute;
  "/login": typeof LoginIndexRoute;
  "/editor": typeof EditorIndexLazyRoute;
  "/novica/$novica_id/uredi": typeof NovicaNovica_idUrediRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  "/": typeof IndexRoute;
  "/dashboard": typeof DashboardRouteRouteWithChildren;
  "/home2": typeof Home2RouteRoute;
  "/homepage": typeof HomepageRouteRoute;
  "/login": typeof LoginRouteRouteWithChildren;
  "/shell": typeof ShellRoute;
  "/novica/$novica_id": typeof NovicaNovica_idRouteRouteWithChildren;
  "/(static)/zgodovina": typeof staticZgodovinaRoute;
  "/dashboard/": typeof DashboardIndexRoute;
  "/login/": typeof LoginIndexRoute;
  "/editor/": typeof EditorIndexLazyRoute;
  "/novica/$novica_id/uredi": typeof NovicaNovica_idUrediRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | "/dashboard"
    | "/home2"
    | "/homepage"
    | "/login"
    | "/shell"
    | "/novica/$novica_id"
    | "/zgodovina"
    | "/dashboard/"
    | "/login/"
    | "/editor"
    | "/novica/$novica_id/uredi";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | "/home2"
    | "/homepage"
    | "/shell"
    | "/novica/$novica_id"
    | "/zgodovina"
    | "/dashboard"
    | "/login"
    | "/editor"
    | "/novica/$novica_id/uredi";
  id:
    | "__root__"
    | "/"
    | "/dashboard"
    | "/home2"
    | "/homepage"
    | "/login"
    | "/shell"
    | "/novica/$novica_id"
    | "/(static)/zgodovina"
    | "/dashboard/"
    | "/login/"
    | "/editor/"
    | "/novica/$novica_id/uredi";
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren;
  Home2RouteRoute: typeof Home2RouteRoute;
  HomepageRouteRoute: typeof HomepageRouteRoute;
  LoginRouteRoute: typeof LoginRouteRouteWithChildren;
  ShellRoute: typeof ShellRoute;
  NovicaNovica_idRouteRoute: typeof NovicaNovica_idRouteRouteWithChildren;
  staticZgodovinaRoute: typeof staticZgodovinaRoute;
  EditorIndexLazyRoute: typeof EditorIndexLazyRoute;
}
export interface FileServerRoutesByFullPath {
  "/api/upload": typeof ApiUploadServerRoute;
  "/api/auth/$": typeof ApiAuthSplatServerRoute;
}
export interface FileServerRoutesByTo {
  "/api/upload": typeof ApiUploadServerRoute;
  "/api/auth/$": typeof ApiAuthSplatServerRoute;
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport;
  "/api/upload": typeof ApiUploadServerRoute;
  "/api/auth/$": typeof ApiAuthSplatServerRoute;
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath;
  fullPaths: "/api/upload" | "/api/auth/$";
  fileServerRoutesByTo: FileServerRoutesByTo;
  to: "/api/upload" | "/api/auth/$";
  id: "__root__" | "/api/upload" | "/api/auth/$";
  fileServerRoutesById: FileServerRoutesById;
}
export interface RootServerRouteChildren {
  ApiUploadServerRoute: typeof ApiUploadServerRoute;
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute;
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/shell": {
      id: "/shell";
      path: "/shell";
      fullPath: "/shell";
      preLoaderRoute: typeof ShellRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/login": {
      id: "/login";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof LoginRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/homepage": {
      id: "/homepage";
      path: "/homepage";
      fullPath: "/homepage";
      preLoaderRoute: typeof HomepageRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/home2": {
      id: "/home2";
      path: "/home2";
      fullPath: "/home2";
      preLoaderRoute: typeof Home2RouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/dashboard": {
      id: "/dashboard";
      path: "/dashboard";
      fullPath: "/dashboard";
      preLoaderRoute: typeof DashboardRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/editor/": {
      id: "/editor/";
      path: "/editor";
      fullPath: "/editor";
      preLoaderRoute: typeof EditorIndexLazyRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/login/": {
      id: "/login/";
      path: "/";
      fullPath: "/login/";
      preLoaderRoute: typeof LoginIndexRouteImport;
      parentRoute: typeof LoginRouteRoute;
    };
    "/dashboard/": {
      id: "/dashboard/";
      path: "/";
      fullPath: "/dashboard/";
      preLoaderRoute: typeof DashboardIndexRouteImport;
      parentRoute: typeof DashboardRouteRoute;
    };
    "/(static)/zgodovina": {
      id: "/(static)/zgodovina";
      path: "/zgodovina";
      fullPath: "/zgodovina";
      preLoaderRoute: typeof staticZgodovinaRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/novica/$novica_id": {
      id: "/novica/$novica_id";
      path: "/novica/$novica_id";
      fullPath: "/novica/$novica_id";
      preLoaderRoute: typeof NovicaNovica_idRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/novica/$novica_id/uredi": {
      id: "/novica/$novica_id/uredi";
      path: "/uredi";
      fullPath: "/novica/$novica_id/uredi";
      preLoaderRoute: typeof NovicaNovica_idUrediRouteImport;
      parentRoute: typeof NovicaNovica_idRouteRoute;
    };
  }
}
declare module "@tanstack/react-start/server" {
  interface ServerFileRoutesByPath {
    "/api/upload": {
      id: "/api/upload";
      path: "/api/upload";
      fullPath: "/api/upload";
      preLoaderRoute: typeof ApiUploadServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
    "/api/auth/$": {
      id: "/api/auth/$";
      path: "/api/auth/$";
      fullPath: "/api/auth/$";
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
  }
}

interface DashboardRouteRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute;
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
};

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
);

interface LoginRouteRouteChildren {
  LoginIndexRoute: typeof LoginIndexRoute;
}

const LoginRouteRouteChildren: LoginRouteRouteChildren = {
  LoginIndexRoute: LoginIndexRoute,
};

const LoginRouteRouteWithChildren = LoginRouteRoute._addFileChildren(
  LoginRouteRouteChildren,
);

interface NovicaNovica_idRouteRouteChildren {
  NovicaNovica_idUrediRoute: typeof NovicaNovica_idUrediRoute;
}

const NovicaNovica_idRouteRouteChildren: NovicaNovica_idRouteRouteChildren = {
  NovicaNovica_idUrediRoute: NovicaNovica_idUrediRoute,
};

const NovicaNovica_idRouteRouteWithChildren =
  NovicaNovica_idRouteRoute._addFileChildren(NovicaNovica_idRouteRouteChildren);

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  Home2RouteRoute: Home2RouteRoute,
  HomepageRouteRoute: HomepageRouteRoute,
  LoginRouteRoute: LoginRouteRouteWithChildren,
  ShellRoute: ShellRoute,
  NovicaNovica_idRouteRoute: NovicaNovica_idRouteRouteWithChildren,
  staticZgodovinaRoute: staticZgodovinaRoute,
  EditorIndexLazyRoute: EditorIndexLazyRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiUploadServerRoute: ApiUploadServerRoute,
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
};
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>();
